<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lost+found</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sudotop.com/"/>
  <updated>2020-05-09T01:58:51.602Z</updated>
  <id>http://sudotop.com/</id>
  
  <author>
    <name>Like</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PyCharm打包py文件为exe程序</title>
    <link href="http://sudotop.com/2020/05/05/PyCharm%E6%89%93%E5%8C%85py%E6%96%87%E4%BB%B6%E4%B8%BAexe%E7%A8%8B%E5%BA%8F/"/>
    <id>http://sudotop.com/2020/05/05/PyCharm%E6%89%93%E5%8C%85py%E6%96%87%E4%BB%B6%E4%B8%BAexe%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-05-04T16:00:00.000Z</published>
    <updated>2020-05-09T01:58:51.602Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>在pycharm中安装插件PyInstaller</p></li><li><p>调出terminal终端，输入命令pyinstaller -F -w vipvideoplay2.py 点击回车。输入指定命令后会在当前目录下生产dist文件夹，dist文件夹下为生成的exe文件</p></li><li><p>参数说明：</p><ul><li>-F：将所有库文件打包成一个exe</li><li>-w：隐藏黑色控制台窗口</li><li>如果不加-F参数会生成很多文件，但运行比较快。压缩后比单个exe文件小一点；加-F参数只生成一个exe文件，但运行慢</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;在pycharm中安装插件PyInstaller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调出terminal终端，输入命令pyinstaller -F -w vipvideoplay2.py 点击回车。输入指定命令后会在当前目录下生产dist文件夹，dist文
      
    
    </summary>
    
    
      <category term="Python" scheme="http://sudotop.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://sudotop.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="http://sudotop.com/2020/04/26/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://sudotop.com/2020/04/26/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-04-25T16:00:00.000Z</published>
    <updated>2020-05-09T01:58:51.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h2><h3 id="1-软件安装"><a href="#1-软件安装" class="headerlink" title="1. 软件安装"></a>1. 软件安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS7升级小版本但不升级内核</span></span><br><span class="line">yum --exclude=kernel* update -y</span><br><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><h3 id="2-查看磁盘"><a href="#2-查看磁盘" class="headerlink" title="2. 查看磁盘"></a>2. 查看磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看磁盘设备（物理卷），例如：/dev/sda</span></span><br><span class="line">pvdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看LVM（逻辑卷），例如：/dev/mapper/centos-root</span></span><br><span class="line">lvdisplay</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux常用命令&quot;&gt;&lt;a href=&quot;#Linux常用命令&quot; class=&quot;headerlink&quot; title=&quot;Linux常用命令&quot;&gt;&lt;/a&gt;Linux常用命令&lt;/h2&gt;&lt;h3 id=&quot;1-软件安装&quot;&gt;&lt;a href=&quot;#1-软件安装&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://sudotop.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://sudotop.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础</title>
    <link href="http://sudotop.com/2020/04/25/Linux%E5%9F%BA%E7%A1%80/"/>
    <id>http://sudotop.com/2020/04/25/Linux%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-25T08:09:21.000Z</published>
    <updated>2020-05-09T01:58:51.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-优雅地修正命令"><a href="#1-优雅地修正命令" class="headerlink" title="1.优雅地修正命令"></a>1.优雅地修正命令</h2><ul><li>ctrl + a：光标移动到命令开头</li><li>ctrl + e：光标移动到命令结尾</li><li>alt + f：光标向前移动一个单词</li><li>alt + b：光标向后移动一个单词</li><li>ctrl + u：从光标处开始，删除命令</li><li>ctrl + w：删除一个词（以空格隔开的字符串）</li></ul><a id="more"></a> <h2 id="2-Linux环境设定"><a href="#2-Linux环境设定" class="headerlink" title="2.Linux环境设定"></a>2.Linux环境设定</h2><h3 id="登入系统读取步骤："><a href="#登入系统读取步骤：" class="headerlink" title="登入系统读取步骤："></a>登入系统读取步骤：</h3><ul><li><p>当登入系统时候获得一个shell进程时，其读取环境设定档有三步：</p></li><li><p>1.首先读入的是全局环境变量设定档/etc/profile，然后根据其内容读取额外的设定的文档，如 /etc/profile.d和/etc/inputrc</p></li><li><p>2.然后根据不同使用者帐号，去其家目录读取<del>/.bash_profile，如果这读取不了就读取</del>/.bash_login，这个也读取不了才会读取~/.profile，这三个文档设定基本上是一样的，读取有优先关系</p></li><li><p>3.然后在根据用户帐号读取~/.bashrc</p></li></ul><h3 id="etc-和-区别："><a href="#etc-和-区别：" class="headerlink" title="/etc/和~/.区别："></a>/etc/<em>和~/.</em>区别：</h3><ul><li><p>/etc/profile，/etc/bashrc 是系统全局环境变量设定</p></li><li><p><del>/.profile，</del>/.bashrc是用户家目录下的私有环境变量设定</p></li></ul><h3 id="profile与-bashrc的区别"><a href="#profile与-bashrc的区别" class="headerlink" title="/.profile与/.bashrc的区别:"></a><del>/.profile与</del>/.bashrc的区别:</h3><ul><li><p>~/.profile可以设定本用户专有的路径，环境变量等，它只在登入的时候执行一次</p></li><li><p>~/.bashrc也是某用户专有设定文档，可以设定路径，命令别名，每次shell script的执行都会使用它一次（每次打开新的终端时都被读取）</p></li></ul><h2 id="3-bashrc文件"><a href="#3-bashrc文件" class="headerlink" title="3.bashrc文件"></a>3.bashrc文件</h2><ul><li><p>用户目录（/home/xxx 或 /root）下4个隐藏文件，这些文件是每一位用户对终端功能和属性设置，修改.bashrc可以改变环境变量PATH、别名alias和提示符</p><ul><li><p>.bash_history   记录之前输入的命令</p></li><li><p>.bash_logout    当你退出时执行的命令</p></li><li><p>.bash_profile</p></li><li><p>.bashrc</p></li></ul></li><li><p>PATH环境变量修改</p><ul><li><p>PATH变量决定了shell 将到哪些目录中寻找命令或程序。如果要执行的命令的目录在 $PATH 中，就不必输入这个命令的完整路径，直接输入命令就可以了。一些第三方软件没有将可执行文件放到 Linux 的标准目录中。因此，将这些非标准的安装目录添加到 $PATH 是一种解决的办法。</p></li><li><p>作为惯例，所有环境变量名都是大写，要留意Linux区分大小写。当然，也可以自己定义一些变量，如’$path’、’$pAtH’，但shell不会理睬这些变量。</p></li><li><p>变量名有时候以’$’开头，但有时又不是。当设置一个变量时，直接用名称而不需要加“$”，如：<br>“PATH=/usr/bin:/usr/local/bin:/bin”，假如要获取变量值的话，就要在变量名前加’$’：<br>“echo $PATH”，则会显示当前设置的PATH变量“/usr/bin:/usr/local/bin:/bin”</p></li><li><p>处理 $PATH 变量要注意的第三点是：您不能只替换变量，而是要将新的字符串添加到原来的值中。在大多数情况下，您不能用“PATH=/some /directory”，因为这将删除 $PATH 中其他的所有目录，这样您在该终端运行程序时，就不得不给出完整路径。所以，只能作添加：“PATH=$PATH:/some/directory”，假如你要添加/usr/local/arm/3.4.1/bin交叉编译命令，则操作为“PATH=$PATH:/usr/local/arm/3.4.1/bin”。这样，PATH 被设成当前的值（以 $PATH 来表示）＋新添的目录。</p></li><li><p>到目前为止，你只为当前终端设置了新的 $PATH 变量。如果您打开一个新的终端，运行 echo $PATH ，将显示旧的 $PATH 值，而看不到你刚才添加的新目录。因为你先前定义的是一个局部环境变量（仅限于当前的终端）。</p></li><li><p>要定义一个全局变量，使在以后打开的终端中生效，您需要将局部变量输出(export)，可以用”export”命令：export PATH=$PATH:/some/directory，现在如果打开一个新的终端，输入 echo $PATH ，也能看到新设置的$PATH 了。请注意，命令’export’只能改变当前终端及以后运行的终端里的变量。对于已经运行的终端没有作用。</p></li><li><p>为了将目录永久添加到 $PATH ，只要将”export”的那行添加到.bashrc或/etc/bashrc文件中。</p></li></ul></li><li><p>alias别名</p><ul><li><p>一般在.bashrc或/etc/bashrc文件里有几句话</p><ul><li>alias rm=’rm -i’</li><li>alias cp=’cp -i’</li><li>alias mv=’mv -i’</li></ul></li><li><p>有了这几句话，当在终端中输入“mv test.c led.c”实际上输入的是“mv -i test.c led.c”，所以说alias是一个别名。你可以在该配置文件中添加自己风格的别名，如“alias ll=’ls -l’”，只需要在终端中输入“ll”就实现了“ls -l”的功能。还可以添加其他语句，随自己喜好。</p></li></ul></li><li><p>提示符</p><ul><li>当打开一个控制台(console) 时，最先看到的就是提示符(prompt)，如：[root@localhost ~]#</li><li>在默认设置下，提示符将显示用户名、主机名（默认是’localhost’）、当前所在目录（在 Unix 中，’~’表示您的 home 目录）。</li><li>按照传统，最后一个字符可以标识普通用户（$），还是’root’（#）。可以通过 $PS1 变量来设置提示符。命令“echo $PS1”，将显示当前的设定。其中可用字符的含义在 man bash 的’PROMPTING’部分有说明。</li><li>如何才能完成理想的设置呢？对于健忘的初学者来讲，默认设定有些不友好，因为提示符只显示当前目录的最后一部分。如果你看到象这样的提示符[wsf@localhost bin]$，则当前目录可能是’/bin’、’/usr/bin’、’/usr/local/bin’及’/usr/X11R6/bin’。当然，你可以用pwd （输出当前目录，print working directory）。</li><li>能不能叫 shell 自动告诉你当前目录呢？当然可以。这里我将提到的设定，包括提示符，大都包含在文件’/etc/bashrc’中。您可以通过编辑各自 home 目录下的’.bash_profile’和’.bashrc’来改变设置。在 man bash 中的’PROMPTING’部分，对这些参数(parameter)有详细说明。您可以加入一些小玩意，如不同格式的当前时间，命令的历史记录号，甚至不同的颜色。</li><li>一种更适当的设定：PS1=”[\u: \w]\$ “。这样，提示符就变成： [wsf: /usr/bin]$<br>你可以通过命令 export 来测试不同的设置（比如，export PS1=”\u: \w\$ “）。如果找到了适合的提示符，就将设置放到您的’.bashrc’’中。这样，每次打开控制台或终端窗口时，都会生效。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-优雅地修正命令&quot;&gt;&lt;a href=&quot;#1-优雅地修正命令&quot; class=&quot;headerlink&quot; title=&quot;1.优雅地修正命令&quot;&gt;&lt;/a&gt;1.优雅地修正命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + a：光标移动到命令开头&lt;/li&gt;
&lt;li&gt;ctrl + e：光标移动到命令结尾&lt;/li&gt;
&lt;li&gt;alt + f：光标向前移动一个单词&lt;/li&gt;
&lt;li&gt;alt + b：光标向后移动一个单词&lt;/li&gt;
&lt;li&gt;ctrl + u：从光标处开始，删除命令&lt;/li&gt;
&lt;li&gt;ctrl + w：删除一个词（以空格隔开的字符串）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://sudotop.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://sudotop.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>中标麒麟nsV7安装Qt5.12.8</title>
    <link href="http://sudotop.com/2020/04/23/%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9FnsV7%E5%AE%89%E8%A3%85Qt5-12-8/"/>
    <id>http://sudotop.com/2020/04/23/%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9FnsV7%E5%AE%89%E8%A3%85Qt5-12-8/</id>
    <published>2020-04-23T03:02:09.000Z</published>
    <updated>2020-05-09T01:58:51.602Z</updated>
    
    <content type="html"><![CDATA[<ul><li>操作系统：nsV7.4</li><li>Qt5.12.8 <a href="http://download.qt.io/archive/qt/5.12/5.12.8/" target="_blank" rel="noopener">下载地址</a></li><li>freetype-2.10.0.tar.bz2 <a href="https://download.savannah.gnu.org/releases/freetype/" target="_blank" rel="noopener">下载地址</a></li></ul><ol><li>修改源/etc/yum.repos.d/ns7-adv.repo，如下：</li></ol><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[ns7-adv-os]</span><br><span class="line">name=NeoKylin Linux Advanced Server 7 - Os</span><br><span class="line">baseurl=http://update.cs2c.com.cn:8080/NS/V7/V7Update4/os/adv/lic/base/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-neokylin-release</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[ns7-adv-updates]</span><br><span class="line">name=NeoKylin Linux Advanced Server 7 - Updates</span><br><span class="line">baseurl=http://download.cs2c.com.cn/neokylin/server/releases/7.0/x86_64/zx/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-neokylin-release</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[ns7-adv-addons]</span><br><span class="line">name=NeoKylin Linux Advanced Server 7 - Addons</span><br><span class="line">baseurl=http://update.cs2c.com.cn:8080/NS/V7/V7Update4/os/adv/lic/addons/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-neokylin-release</span><br><span class="line">enabled=0</span><br></pre></td></tr></table></figure><ol start="2"><li><p>update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#清理缓存</span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">#重新生成缓存</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">#更新</span><br><span class="line">yum --exclude&#x3D;kernel* update -y</span><br></pre></td></tr></table></figure></li><li><p>更新libfreetype.so.6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd freetype-2.10.0&#x2F;</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;lib&#x2F;freetype</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">rm &#x2F;usr&#x2F;lib64&#x2F;libfreetype.so.6</span><br><span class="line">cp &#x2F;usr&#x2F;lib&#x2F;freetype&#x2F;lib&#x2F;libfreetype.so.6 &#x2F;usr&#x2F;lib64&#x2F;libfreetype.so.6</span><br></pre></td></tr></table></figure></li><li><p>安装libGL-devel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install libGL-devel</span><br></pre></td></tr></table></figure></li><li><p>安装Qt5.12.8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;qt-opensource-linux-x64-5.12.8.run</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;操作系统：nsV7.4&lt;/li&gt;
&lt;li&gt;Qt5.12.8 &lt;a href=&quot;http://download.qt.io/archive/qt/5.12/5.12.8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;freetype-2.10.0.tar.bz2 &lt;a href=&quot;https://download.savannah.gnu.org/releases/freetype/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;修改源/etc/yum.repos.d/ns7-adv.repo，如下：&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://sudotop.com/categories/Linux/"/>
    
    
      <category term="C++" scheme="http://sudotop.com/tags/C/"/>
    
      <category term="Linux" scheme="http://sudotop.com/tags/Linux/"/>
    
      <category term="Qt" scheme="http://sudotop.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>C++设计模式</title>
    <link href="http://sudotop.com/2020/03/21/C++%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://sudotop.com/2020/03/21/C++%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-03-20T16:00:00.000Z</published>
    <updated>2020-05-09T01:58:51.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-设计模式"><a href="#C-设计模式" class="headerlink" title="C++设计模式"></a><a href="https://www.bilibili.com/video/av24176315" target="_blank" rel="noopener">C++设计模式</a></h1><h2 id="1-什么是设计模式"><a href="#1-什么是设计模式" class="headerlink" title="1.什么是设计模式"></a>1.什么是设计模式</h2><p>“每一个模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复劳动”。<br>——Christopher Alexander</p><a id="more"></a> <h2 id="2-如何解决复杂性？"><a href="#2-如何解决复杂性？" class="headerlink" title="2.如何解决复杂性？"></a>2.如何解决复杂性？</h2><ul><li>分解<ul><li>人们面对复杂性有一个常见的做法：即分而治之，将大问题分解为多个小问题，将复杂问题分解为多个简单问题。</li></ul></li><li>抽象<ul><li>更高层次来讲，人们处理复杂性有一个通用的技术，即抽象。由于不能掌握全部的复杂对象，我们选择忽视它的非本质细节，而去处理泛化和理想化了的对象模型。</li></ul></li></ul><h2 id="3-面向对象设计原则"><a href="#3-面向对象设计原则" class="headerlink" title="3.面向对象设计原则"></a>3.面向对象设计原则</h2><ol><li>依赖倒置原则（DIP）<ul><li>高层模块(稳定)不应该依赖于低层模块(变化)，二者都应该依赖于抽象(稳定) 。</li><li>抽象(稳定)不应该依赖于实现细节(变化) ，实现细节应该依赖于抽象(稳定)。</li></ul></li><li>开放封闭原则（OCP）<ul><li>对扩展开放，对更改封闭。</li><li>类模块应该是可扩展的，但是不可修改。</li></ul></li><li>单一职责原则（SRP）<ul><li>一个类应该仅有一个引起它变化的原因。</li><li>变化的方向隐含着类的责任。</li></ul></li><li>Liskov 替换原则（LSP）<ul><li>子类必须能够替换它们的基类(IS-A)。</li><li>继承表达类型抽象。</li></ul></li><li>接口隔离原则（ISP）<ul><li>不应该强迫客户程序依赖它们不用的方法。</li><li>接口应该小而完备。</li></ul></li><li>优先使用对象组合，而不是类继承<ul><li>类继承通常为“白箱复用”，对象组合通常为“黑箱复用” 。</li><li>继承在某种程度上破坏了封装性，子类父类耦合度高。</li><li>而对象组合则只要求被组合的对象具有良好定义的接口，耦合度低。</li></ul></li><li>封装变化点<ul><li>使用封装来创建对象之间的分界层，让设计者可以在分界层的一侧进行修改，而不会对另一侧产生不良的影响，从而实现层次间的松耦合。</li></ul></li><li>针对接口编程，而不是针对实现编程<ul><li>不将变量类型声明为某个特定的具体类，而是声明为某个接口。</li><li>客户程序无需获知对象的具体类型，只需要知道对象所具有的接口。</li><li>减少系统中各部分的依赖关系，从而实现“高内聚、松耦合”的类型设计方案。</li></ul></li></ol><h2 id="4-从封装变化角度对模式分类"><a href="#4-从封装变化角度对模式分类" class="headerlink" title="4.从封装变化角度对模式分类"></a>4.从封装变化角度对模式分类</h2><h3 id="1-组件协作："><a href="#1-组件协作：" class="headerlink" title="(1)组件协作："></a>(1)组件协作：</h3><ul><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Template%20Method" target="_blank" rel="noopener">Template Method</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Template-Pattern" target="_blank" rel="noopener">Template-Pattern(Head-First版)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Observer" target="_blank" rel="noopener">Observer/Event</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Observer-Pattern" target="_blank" rel="noopener">Observer(Head-First版)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Strategy" target="_blank" rel="noopener">Strategy</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Strategy-Pattern" target="_blank" rel="noopener">Strategy(Head-First版)</a><h3 id="2-单一职责："><a href="#2-单一职责：" class="headerlink" title="(2)单一职责："></a>(2)单一职责：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Decorator" target="_blank" rel="noopener">Decorator</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Decorator-Pattern" target="_blank" rel="noopener">Decorator(Head-First版)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Bridge" target="_blank" rel="noopener">Bridge</a><h3 id="3-对象创建"><a href="#3-对象创建" class="headerlink" title="(3)对象创建:"></a>(3)对象创建:</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Factory%20Method" target="_blank" rel="noopener">Factory Method</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Factory-Pattern" target="_blank" rel="noopener">Factory(Head-First版)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Bridge" target="_blank" rel="noopener">Bridge</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Abstract%20Factory" target="_blank" rel="noopener">Abstract Factory</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Prototype" target="_blank" rel="noopener">Prototype</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Builder" target="_blank" rel="noopener">Builder</a><h3 id="4-对象性能："><a href="#4-对象性能：" class="headerlink" title="(4)对象性能："></a>(4)对象性能：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Singleton" target="_blank" rel="noopener">Singleton</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Flyweight" target="_blank" rel="noopener">Flyweight(享元模式)</a><h3 id="5-接口隔离"><a href="#5-接口隔离" class="headerlink" title="(5)接口隔离:"></a>(5)接口隔离:</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Facade" target="_blank" rel="noopener">Façade(门面模式)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Proxy" target="_blank" rel="noopener">Proxy</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Mediator" target="_blank" rel="noopener">Mediator(中介者)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Adapter" target="_blank" rel="noopener">Adapter</a><h3 id="6-状态变化："><a href="#6-状态变化：" class="headerlink" title="(6)状态变化："></a>(6)状态变化：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Memento" target="_blank" rel="noopener">Memento(备忘录)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/State" target="_blank" rel="noopener">State</a><h3 id="7-数据结构："><a href="#7-数据结构：" class="headerlink" title="(7)数据结构："></a>(7)数据结构：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Composite" target="_blank" rel="noopener">Composite(组合模式)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Iterator" target="_blank" rel="noopener">Iterator</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Chain%20of%20Resposibility" target="_blank" rel="noopener">Chain of Resposibility(职责链)</a><h3 id="8-行为变化："><a href="#8-行为变化：" class="headerlink" title="(8)行为变化："></a>(8)行为变化：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Command" target="_blank" rel="noopener">Command</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Command-Pattern" target="_blank" rel="noopener">Command(Head-First版)</a></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Visitor" target="_blank" rel="noopener">Visitor</a><h3 id="9-领域问题："><a href="#9-领域问题：" class="headerlink" title="(9)领域问题："></a>(9)领域问题：</h3></li><li><a href="https://consti.coding.net/p/Toys/d/Toys/git/tree/master/DesignPattern/Interpreter" target="_blank" rel="noopener">Interpreter</a></li></ul><h3 id="10-现代较少用的模式"><a href="#10-现代较少用的模式" class="headerlink" title="(10)现代较少用的模式"></a>(10)现代较少用的模式</h3><ul><li>Builder</li><li>Mediator</li><li>Memento</li><li>Iterator</li><li>Chain of Resposibility</li><li>Command</li><li>Visitor</li><li>Interpreter</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;C-设计模式&quot;&gt;&lt;a href=&quot;#C-设计模式&quot; class=&quot;headerlink&quot; title=&quot;C++设计模式&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.bilibili.com/video/av24176315&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++设计模式&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-什么是设计模式&quot;&gt;&lt;a href=&quot;#1-什么是设计模式&quot; class=&quot;headerlink&quot; title=&quot;1.什么是设计模式&quot;&gt;&lt;/a&gt;1.什么是设计模式&lt;/h2&gt;&lt;p&gt;“每一个模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复劳动”。&lt;br&gt;——Christopher Alexander&lt;/p&gt;
    
    </summary>
    
    
      <category term="设计模式" scheme="http://sudotop.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="C++" scheme="http://sudotop.com/tags/C/"/>
    
      <category term="设计模式" scheme="http://sudotop.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="http://sudotop.com/2020/01/12/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://sudotop.com/2020/01/12/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-05-09T01:58:51.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-帮助命令"><a href="#1-帮助命令" class="headerlink" title="1.帮助命令"></a>1.帮助命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br><span class="line">docker info</span><br><span class="line">docker --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-镜像命令"><a href="#2-镜像命令" class="headerlink" title="2.镜像命令"></a>2.镜像命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker images -qa</span><br><span class="line"></span><br><span class="line">docker search xxx</span><br><span class="line">docker search -s 30 tomcat</span><br><span class="line"></span><br><span class="line">docker pull xxx</span><br><span class="line">docker rmi xxx</span><br><span class="line">docker rmi -f $(docker images -qa)</span><br></pre></td></tr></table></figure><h2 id="3-容器命令"><a href="#3-容器命令" class="headerlink" title="3.容器命令"></a>3.容器命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name mycentos centos:7</span><br><span class="line">-i</span><br><span class="line">-t</span><br><span class="line">-d</span><br><span class="line">-P</span><br><span class="line">-p</span><br><span class="line">--name</span><br><span class="line"></span><br><span class="line">docker ps -n 3</span><br><span class="line">-a</span><br><span class="line">-q</span><br><span class="line">-l</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#退出不停止            </span></span><br><span class="line">ctrl+P+Q        </span><br><span class="line"></span><br><span class="line">docker start id</span><br><span class="line">docker restart id</span><br><span class="line">docker stop id</span><br><span class="line"></span><br><span class="line"><span class="comment">#强制停止</span></span><br><span class="line">docker <span class="built_in">kill</span> id  </span><br><span class="line"></span><br><span class="line">docker rm -f $(docker ps -qa)</span><br><span class="line">docker ps -qa | xargs docker rm</span><br><span class="line"></span><br><span class="line"><span class="comment">#守护式运行</span></span><br><span class="line">docker run -d centos</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器日志</span></span><br><span class="line">docker run -d centos /bin/bash -c <span class="string">"while true;do echo hello;sleep 2;done"</span></span><br><span class="line">docker logs id</span><br><span class="line">-f </span><br><span class="line">-t </span><br><span class="line">--tail </span><br><span class="line"></span><br><span class="line">docker top id</span><br><span class="line">docker inspect id</span><br><span class="line"></span><br><span class="line">docker attach id</span><br><span class="line">docker <span class="built_in">exec</span> -it id /bin/bash</span><br><span class="line">docker <span class="built_in">exec</span> -it id ls -l /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#从容器内拷贝文件到宿主机</span></span><br><span class="line">docker cp id:/tmp/xxx /home</span><br><span class="line"></span><br><span class="line">docker run -it -p 8888:8080 tomcat</span><br><span class="line">docker run -it -P tomcat</span><br><span class="line">docker commit -m=<span class="string">"xxx"</span> -a=<span class="string">"xxx"</span> id xxx/mytomcat:1.2</span><br></pre></td></tr></table></figure><h2 id="4-容器数据卷-持久化-数据共享"><a href="#4-容器数据卷-持久化-数据共享" class="headerlink" title="4.容器数据卷(持久化+数据共享)"></a>4.容器数据卷(持久化+数据共享)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /宿主机绝对路径:/容器内目录 [--privileged=<span class="literal">true</span>] 镜像名</span><br><span class="line">docker run -it -v /宿主机绝对路径:/容器内目录:ro 镜像名 (容器内只能读)</span><br><span class="line"></span><br><span class="line">FROM centos</span><br><span class="line">VOLUME [<span class="string">"/dataVolumeContainer1"</span>,<span class="string">"/dataVolumeContainer2"</span>]</span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">"finished"</span></span><br><span class="line">CMD /bin/bash</span><br><span class="line"></span><br><span class="line">docker build -f /Dockerfile路径 -t consti/centos .</span><br></pre></td></tr></table></figure><h2 id="5-MySQL"><a href="#5-MySQL" class="headerlink" title="5.MySQL"></a>5.MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 1234:3306 --name mysql \</span><br><span class="line">-v /home/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /home/mysql/logs:/logs \</span><br><span class="line">-v /home/mysql/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.6</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份</span></span><br><span class="line">docker <span class="built_in">exec</span> mysql容器ID sh -c `<span class="built_in">exec</span> mysqldump --all-databases -uroot -p<span class="string">"123456"</span> `&gt;/home/all-databases.sql</span><br></pre></td></tr></table></figure><h2 id="6-Redis"><a href="#6-Redis" class="headerlink" title="6.Redis"></a>6.Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6379:6379 \</span><br><span class="line">-v /home/myredis/data:/data \</span><br><span class="line">-v /home/myredis/conf/redis.conf:/usr/<span class="built_in">local</span>/etc/redis/redis.conf \</span><br><span class="line">-d redis:3.2 redis-server /usr/<span class="built_in">local</span>/etc/redis/redis.conf \</span><br><span class="line">--appendonly yes</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-帮助命令&quot;&gt;&lt;a href=&quot;#1-帮助命令&quot; class=&quot;headerlink&quot; title=&quot;1.帮助命令&quot;&gt;&lt;/a&gt;1.帮助命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker --&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://sudotop.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://sudotop.com/tags/Linux/"/>
    
      <category term="Docker" scheme="http://sudotop.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7二进制安装Docker</title>
    <link href="http://sudotop.com/2020/01/11/CentOS7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://sudotop.com/2020/01/11/CentOS7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85Docker/</id>
    <published>2020-01-10T16:00:00.000Z</published>
    <updated>2020-05-09T01:58:51.598Z</updated>
    
    <content type="html"><![CDATA[<ul><li>操作系统：CentOS7.4</li><li>Docker版本：18.06.3 <a href="https://download.docker.com/linux/static/stable/x86_64/" target="_blank" rel="noopener">官方下载地址</a></li></ul><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#setup</span></span><br><span class="line">tar -xvf ./docker-18.06.3-ce.tgz &amp;&amp; cp ./docker/* /usr/bin/ &amp;&amp; rm -rf ./docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd config</span></span><br><span class="line">cat &gt;/etc/systemd/system/docker.service &lt;&lt;-EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="comment"># the default is not to use systemd for cgroups because the delegate issues still</span></span><br><span class="line"><span class="comment"># exists and systemd currently does not support the cgroup feature set required</span></span><br><span class="line"><span class="comment"># for containers run by docker</span></span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP </span><br><span class="line"><span class="comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class="line"><span class="comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"><span class="comment"># Uncomment TasksMax if your systemd version supports it.</span></span><br><span class="line"><span class="comment"># Only systemd 226 and above support this version.</span></span><br><span class="line"><span class="comment">#TasksMax=infinity</span></span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"><span class="comment"># set delegate yes so that systemd does not reset the cgroups of docker containers</span></span><br><span class="line">Delegate=yes</span><br><span class="line"><span class="comment"># kill only the docker process, not all processes in the cgroup</span></span><br><span class="line">KillMode=process</span><br><span class="line"><span class="comment"># restart the docker process if it exits prematurely</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt;/etc/systemd/system/docker.socket &lt;&lt;-EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Socket <span class="keyword">for</span> the API</span><br><span class="line">PartOf=docker.service</span><br><span class="line"></span><br><span class="line">[Socket]</span><br><span class="line"><span class="comment"># If /var/run is not implemented as a symlink to /run, you may need to</span></span><br><span class="line"><span class="comment"># specify ListenStream=/var/run/docker.sock instead.</span></span><br><span class="line">ListenStream=/run/docker.sock</span><br><span class="line">SocketMode=0660</span><br><span class="line">SocketUser=root</span><br><span class="line">SocketGroup=docker</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=sockets.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">chmod +x /etc/systemd/system/docker.s*</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start docker &amp;&amp; systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改源</span></span><br><span class="line">cat &gt;/etc/docker/daemon.json &lt;&lt;-EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://kuamavit.mirror.aliyuncs.com"</span>, <span class="string">"https://registry.docker-cn.com"</span>, <span class="string">"https://docker.mirrors.ustc.edu.cn"</span>],</span><br><span class="line">  <span class="string">"max-concurrent-downloads"</span>: 10,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"graph"</span>: <span class="string">"/data/docker"</span>,</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-level"</span>: <span class="string">"warn"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"10m"</span>,</span><br><span class="line">    <span class="string">"max-file"</span>: <span class="string">"3"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#testing</span></span><br><span class="line">systemctl restart docker &amp;&amp; systemctl status docker &amp;&amp; docker -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;操作系统：CentOS7.4&lt;/li&gt;
&lt;li&gt;Docker版本：18.06.3 &lt;a href=&quot;https://download.docker.com/linux/static/stable/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://sudotop.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://sudotop.com/tags/Linux/"/>
    
      <category term="Docker" scheme="http://sudotop.com/tags/Docker/"/>
    
  </entry>
  
</feed>
